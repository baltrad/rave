<?xml version="1.0" encoding="UTF-8"?>
<generate-registry>
<debug function="debugme" help="Reads the input file (first input file in the files list) and injects it into a baltrad-node. Just for debugging." module="rave_pgf_debug"><arguments /></debug>
<eu.baltrad.beast.generatecomposite function="generate" help="Generate composite plugin" module="rave_pgf_composite_plugin"><arguments floats="height,range,zrA,zrb" strings="area,quantity,method,date,time,selection,interpolation_method,anomaly-qc,qc-mode,reprocess_qfields,prodpar,applygra,ignore-malfunc,ctfilter,qitotal_field,algorithm_id,merge"/></eu.baltrad.beast.generatecomposite>
<eu.baltrad.beast.generatescansun function="generate" help="Scans polar volumes for sun hits" module="rave_pgf_scansun_plugin"><arguments /></eu.baltrad.beast.generatescansun>
<eu.baltrad.beast.generatevolume function="generate" help="Polar volume generation from individual scans" module="rave_pgf_volume_plugin"><arguments floats="height,range,zrA,zrb" strings="source,date,time,anomaly-qc,qc-mode,algorithm_id,merge" /></eu.baltrad.beast.generatevolume>
<se.smhi.rave.creategmapimage function="generate" help="Google Map Plugin" module="googlemap_pgf_plugin"><arguments strings="outfile,date,time,algorithm_id" /></se.smhi.rave.creategmapimage>
<eu.baltrad.beast.generateacrr function="generate" help="Generate ACRR plugin" module="rave_pgf_acrr_plugin"><arguments floats="zra,zrb" strings="date,time,quantity,distancefield,applygra,productid" ints="hours,N,accept"/></eu.baltrad.beast.generateacrr>
<eu.baltrad.beast.creategracoefficient function="generate" help="Generate GRA coefficient plugin" module="rave_pgf_gra_plugin"><arguments floats="zra,zrb" strings="date,time,quantity,distancefield,adjustmentfile" ints="interval,N,accept"/></eu.baltrad.beast.creategracoefficient>
<eu.baltrad.beast.generatesite2d function="generate" help="Generate Site2D plugin" module="rave_pgf_site2D_plugin"><arguments floats="height,range,zrA,zrb,xscale,yscale" strings="area,quantity,method,date,time,anomaly-qc,qc-mode,prodpar,applygra,ignore-malfunc,ctfilter,pcsid,algorithm_id" /></eu.baltrad.beast.generatesite2d>
<eu.baltrad.beast.applyqc function="generate" help="Apply quality controls on a polar volume" module="rave_pgf_apply_qc_plugin"><arguments strings="date,time,anomaly-qc,qc-mode,algorithm_id,remove-malfunc" /></eu.baltrad.beast.applyqc>
</generate-registry>